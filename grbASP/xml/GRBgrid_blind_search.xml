<?xml version="1.0" encoding="UTF-8"?>
<pipeline
   xmlns="http://glast-ground.slac.stanford.edu/pipeline"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://glast-ground.slac.stanford.edu/pipeline http://glast-ground.slac.stanford.edu/Pipeline-II/schemas/2.0/pipeline.xsd">
<!-- $Header$
-->
<task name="GRBgrid_blind_search" version="0.6" type="Data">
  <variables>
    <var name="ST_INST">"/nfs/farm/g/glast/u30/builds/rh9_gcc32/ScienceTools/ScienceTools-v9r3p1"</var>
    <var name="BINDIR">rh9_gcc32</var>
  </variables>
   <prerequisites>
      <prerequisite name="logicalPath" type="string"/>
      <prerequisite name="TSTART" type="integer"/>
      <prerequisite name="TSTOP" type="integer"/>
      <prerequisite name="output_dir" type="string"/>
      <prerequisite name="ASP_PATH" type="string"/>
      <prerequisite name="PIPELINESERVER" type="string"/>
   </prerequisites>
   <process name="catalogQuery">
     <script><![CDATA[
       opt1 = '(%(TSTART)i <= nMetStart && nMetStop <= %(TSTOP)i)' % locals()
       opt2 = '(nMetStart <= %(TSTART)i && %(TSTART)i <= nMetStop)' % locals()
       opt3 = '(nMetStart <= %(TSTOP)i && %(TSTOP)i <= nMetStop)' % locals()
       query = ('DataType == \"MERIT\" && (%s || %s || %s)' 
                % (opt1, opt2, opt3))
       datasetList = datacatalog.getDatasets(logicalPath + "/*", query)
       it = datasetList.iterator()
       istream = 0
       while it.hasNext():
           dataset = it.next()
           meritFile = dataset.getFirstOKLocation().getPath()
           pipeline.createSubstream("BlindSearch", istream,
                                    "MERIT_FILE=%s" % meritFile)
           istream += 1
       output = pipeline.createFile('MeritFileList')
       datasetList.writeToFile(output, 1)
       pipeline.writeFile(output)
     ]]></script>
     <createsSubtasks>
       <subtask>BlindSearch</subtask>
     </createsSubtasks>
   </process>
   <task name="BlindSearch" version="0.1" type="Data">
     <prerequisites>
       <prerequisite name="MERIT_FILE" type="string"/>
     </prerequisites>
     <variables>
       <var name="FILE_NUM">${pipeline.stream}</var>
     </variables>
     <process name="MeritBlindSearch">
       <job executable="${GRBASPROOT}/${BINDIR}/MeritBlindSearch.sh"
            batchOptions="-q glastdataq " allocationGroup="glastdata"/>
     </process>
   </task> <!--BlindSearch-->
</task> <!--GRBgrid_blind_search-->
</pipeline>
