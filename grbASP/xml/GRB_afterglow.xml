<?xml version="1.0" encoding="UTF-8"?>
<pipeline
    xmlns="http://glast-ground.slac.stanford.edu/pipeline"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://glast-ground.slac.stanford.edu/pipeline http://glast-ground.slac.stanford.edu/Pipeline-II/schemas/2.0/pipeline.xsd">
  <!-- $Header$
  -->
<task name="GRB_afterglow" version="5.0" type="Data">
  <variables>
    <var name="ST_INST">"/nfs/farm/g/glast/u30/builds/rh9_gcc32/ScienceTools/ScienceTools-v9r4p1"</var>
    <var name="BINDIR">rh9_gcc32</var>
  </variables>
  <prerequisites>
    <prerequisite name="logicalPath" type="string"/>
    <prerequisite name="TSTART" type="integer"/>
    <prerequisite name="TSTOP" type="integer"/>
    <prerequisite name="output_dir" type="string"/>
    <prerequisite name="GRB_parfile" type="string"/>
    <prerequisite name="ASP_PATH" type="string"/>
    <prerequisite name="GRBASPROOT" type="string"/>
    <prerequisite name="PIPELINESERVER" type="string"/>
  </prerequisites>
  <process name="catalogQuery">
    <script><![CDATA[
      def query(outfile, path, TSTART, TSTOP):
          output = pipeline.createFile(outfile)
          opt1 = '(%(TSTART)i <= nMetStart && nMetStop <= %(TSTOP)i)' % locals()
          opt2 = '(nMetStart <= %(TSTART)i && %(TSTART)i <= nMetStop)'% locals()
          opt3 = '(nMetStart <= %(TSTOP)i && %(TSTOP)i <= nMetStop)' % locals()
          query = ('DataType == \"%s\" && (%s || %s || %s)' 
                   % (path, opt1, opt2, opt3))
          datasetList = datacatalog.getDatasets(logicalPath+'/*', query)
          datasetList.writeToFile(output, 1)
          pipeline.writeFile(output)
      query("Ft1FileList", "FT1", TSTART, TSTOP)
      query("Ft2FileList", "FT2", TSTART, TSTOP)
      ]]></script>
  </process>
  <process name="afterglowData">
    <variables>
      <var name="OUTPUTDIR">${output_dir}</var>
      <var name="GRBPARS">${GRB_parfile}</var>
    </variables>
    <job executable="${GRBASPROOT}/${BINDIR}/afterglowData.sh"
         batchOptions="-q short"/>
    <depends>
      <after process="catalogQuery" status="SUCCESS"/>
    </depends>
  </process>
  <process name="afterglowDiffResps">
    <variables>
      <var name="OUTPUTDIR">${output_dir}</var>
      <var name="GRBPARS">${GRB_parfile}</var>
    </variables>
    <job executable="${GRBASPROOT}/${BINDIR}/afterglowDiffResps.sh" 
         batchOptions=" -q glastdataq " allocationGroup="glastdata" />
    <depends>
      <after process="afterglowData" status="SUCCESS"/>
    </depends>
  </process>

  <process name="afterglowLivetimeCube">
    <variables>
      <var name="OUTPUTDIR">${output_dir}</var>
      <var name="GRBPARS">${GRB_parfile}</var>
    </variables>
    <job executable="${GRBASPROOT}/${BINDIR}/afterglowLivetimeCube.sh" 
         batchOptions=" -q glastdataq " allocationGroup="glastdata" />
    <depends>
      <after process="afterglowData" status="SUCCESS"/>
    </depends>
  </process>

  <process name="afterglowExpMap">
    <variables>
      <var name="OUTPUTDIR">${output_dir}</var>
      <var name="GRBPARS">${GRB_parfile}</var>
    </variables>
    <job executable="${GRBASPROOT}/${BINDIR}/afterglowExpMap.sh" 
         batchOptions=" -q glastdataq " allocationGroup="glastdata" />
    <depends>
      <after process="afterglowLivetimeCube" status="SUCCESS"/>
    </depends>
  </process>

  <process name="afterglowAnalysis">
    <variables>
      <var name="OUTPUTDIR">${output_dir}</var>
      <var name="GRBPARS">${GRB_parfile}</var>
    </variables>
    <job executable="${GRBASPROOT}/${BINDIR}/afterglowAnalysis.sh" 
         batchOptions=" -q glastdataq " allocationGroup="glastdata" />
    <depends>
      <after process="afterglowExpMap" status="SUCCESS"/>
      <after process="afterglowDiffResps" status="SUCCESS"/>
    </depends>
  </process>

  <process name="makeAfterglowPlots">
    <job executable="${GRBASPROOT}/${BINDIR}/makeAfterglowPlots.sh"
         batchOptions=" -q short " allocationGroup="glastdata" />
    <depends>
      <after process="afterglowAnalysis" status="SUCCESS"/>
    </depends>
  </process>

  <process name="registerPlots">
    <script>
      <![CDATA[
        priorProcess = pipeline.getProcessInstance("makeAfterglowPlots")
        grb_id = priorProcess.getVariable('GRB_ID')
        dataTypes = ('SPECTRUM', 'LIGHTCURVE')
        prefixes = ('countsSpectra', 'lightCurve')
        files = ['%s_afterglow_%i.png' % (prefix, grb_id)
                 for prefix in prefixes]
        for dataType, outfile in zip(dataTypes, files):
            attributes = 'nGrbId=%i' % grb_id
            print attributes
            logicalPath = '/ASP/Results/GRB/%s:%s' % (dataType, outfile)
            print logicalPath
            filePath = '%s/%s' % (output_dir, outfile)
            print filePath
            datacatalog.registerDataset(dataType, logicalPath, filePath, 
                                        attributes)
       ]]>
    </script>
    <depends>
      <after process="makeAfterglowPlots" status="SUCCESS"/>
    </depends>
  </process>
</task> <!-- GRB_afterglow -->
</pipeline>
