<?xml version="1.0" encoding="UTF-8"?>
<pipeline
   xmlns="http://glast-ground.slac.stanford.edu/pipeline"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://glast-ground.slac.stanford.edu/pipeline http://glast-ground.slac.stanford.edu/Pipeline-II/schemas/2.0/pipeline.xsd">
<!-- $Header$
-->
<task name="PGWave" version="1.6" type="Data">
  <variables>
    <!-- Default values that can be overridden at the command line. -->
    <var name="ST_INST">"/nfs/farm/g/glast/u30/builds/rh9_gcc32/ScienceTools/ScienceTools-v9r2p1"</var>
    <var name="BINDIR">rh9_gcc32</var>
  </variables>
  <prerequisites>
    <prerequisite name="logicalPath" type="string"/>
    <prerequisite name="OUTPUTDIR" type="string"/>
    <prerequisite name="DownlinkId" type="integer"/>
    <prerequisite name="ASP_PATH" type="string"/>
    <prerequisite name="CATDIR" type="string"/>
    <prerequisite name="PGWAVEROOT" type="string"/>
  </prerequisites>

  <process name="catalogQuery">
    <script>
      <![CDATA[
        def query(outfile, path, DownlinkId):
            output = pipeline.createFile(outfile)
            query = ('DataType == \"%s\" && nDownlink == %i'
                     % (path, DownlinkId))
            datasetList = datacatalog.getDatasets(logicalPath+'/'+path, query)
            datasetList.writeToFile(output)
            pipeline.writeFile(output)
        query("Ft1FileList", "FT1", DownlinkId)
        query("Ft2FileList", "FT2", DownlinkId)
	]]></script>
  </process>

  <process name="getPgwInputData">
    <job executable="${PGWAVEROOT}/${BINDIR}/getPgwInputData.sh" 
         batchOptions=" -q short"/>
    <depends>
      <after process="catalogQuery" status="SUCCESS"/>
    </depends>
  </process>

  <process name="runpgw">
    <job executable="${PGWAVEROOT}/${BINDIR}/runpgw.sh"
         batchOptions=" -q medium"/>
    <depends>
      <after process="getPgwInputData" status="SUCCESS"/>
    </depends>
  </process>

</task><!--PGWave-->

</pipeline>
