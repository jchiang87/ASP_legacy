// -*- mode: c++ -*-
%module BayesianBlocks
%{
#include <vector>
#include "BayesianBlocks/BayesianBlocks.h"
#include "BayesianBlocks/Exposure.h"
%}
%include stl.i
%exception {
   try {
      $action
   } catch (std::exception & eObj) {
      PyErr_SetString(PyExc_RuntimeError, const_cast<char*>(eObj.what()));
      return NULL;
   }
}
%template(DoubleVector) std::vector<double>;
%template(DoubleVectorVector) std::vector< std::vector<double> >;
%template(IntVector) std::vector<int>;
%include $(BAYESIANBLOCKSROOT)/BayesianBlocks/BayesianBlocks.h
%include $(BAYESIANBLOCKSROOT)/BayesianBlocks/Exposure.h
%extend BayesianBlocks {
   std::vector< std::vector<double> > lightCurve() {
      std::vector<double> tmins;
      std::vector<double> tmaxs;
      std::vector<double> numEvents;
      self->computeLightCurve(tmins, tmaxs, numEvents);
      std::vector< std::vector<double> > output;
      output.push_back(tmins);
      output.push_back(tmaxs);
      output.push_back(numEvents);
      return output;
   }
}
